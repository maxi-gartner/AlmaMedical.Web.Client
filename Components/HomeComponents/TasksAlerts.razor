@* Components/Dashboard/TasksAlerts.razor *@

<div class="rounded-2xl bg-white/70 backdrop-blur-sm p-6 shadow-lg border border-white/20">
    <div class="flex items-center gap-3 mb-4">
        <div class="w-10 h-10 rounded-lg bg-gradient-to-br from-amber-500 to-orange-500 flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
            </svg>
        </div>
        <h3 class="text-lg font-bold text-slate-800">Alertas y Tareas</h3>
    </div>

    <div class="space-y-2">
        @foreach (var alert in alerts)
        {
            <div class="group p-3 rounded-xl bg-gradient-to-r @alert.ColorClass hover:shadow-md transition-all cursor-pointer">
                <div class="flex items-start gap-3">
                    <div class="mt-0.5">
                        @if (alert.Type == "warning")
                        {
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                            </svg>
                        }
                        else if (alert.Type == "info")
                        {
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        }
                        else if (alert.Type == "task")
                        {
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                            </svg>
                        }
                        else
                        {
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                            </svg>
                        }
                    </div>
                    <div class="flex-1">
                        <p class="text-sm font-medium text-white">@alert.Title</p>
                        <p class="text-xs text-white/80 mt-0.5">@alert.Description</p>
                        <div class="flex items-center gap-2 mt-2">
                            <span class="text-xs text-white/70">@alert.Time</span>
                            @if (alert.IsUrgent)
                            {
                                <span class="px-2 py-0.5 bg-white/20 backdrop-blur-sm rounded-full text-xs text-white font-medium">
                                    Urgente
                                </span>
                            }
                        </div>
                    </div>
                    @if (alert.Type == "task")
                    {
                        <button @onclick="() => CompleteTask(alert.Id)"
                                class="px-3 py-1.5 bg-white/20 backdrop-blur-sm hover:bg-white/30 text-white rounded-lg text-xs font-medium transition-colors">
                            Marcar
                        </button>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Empty State -->
    @if (!alerts.Any())
    {
        <div class="text-center py-8">
            <svg class="w-12 h-12 mx-auto text-slate-300 mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <p class="text-slate-500 text-sm">No hay alertas pendientes</p>
        </div>
    }
</div>

@code {
    private List<AlertMock> alerts = new()
    {
        new AlertMock
        {
            Id = 1,
            Type = "warning",
            Title = "Stock bajo: Botox",
            Description = "Solo quedan 2 unidades en inventario",
            Time = "Hace 30 min",
            IsUrgent = true,
            ColorClass = "from-amber-500 to-orange-600"
        },
        new AlertMock
        {
            Id = 2,
            Type = "task",
            Title = "Confirmar turnos de mañana",
            Description = "3 turnos pendientes de confirmación",
            Time = "Hoy 15:00",
            IsUrgent = false,
            ColorClass = "from-blue-500 to-cyan-600"
        },
        new AlertMock
        {
            Id = 3,
            Type = "info",
            Title = "Cliente sin confirmar",
            Description = "Laura Fernández no confirmó turno de las 15:00",
            Time = "Hace 1 hora",
            IsUrgent = false,
            ColorClass = "from-purple-500 to-pink-600"
        },
        new AlertMock
        {
            Id = 4,
            Type = "task",
            Title = "Llamar a proveedor",
            Description = "Reponer stock de productos agotados",
            Time = "Hoy 16:00",
            IsUrgent = false,
            ColorClass = "from-blue-500 to-cyan-600"
        }
    };

    private void CompleteTask(int taskId)
    {
        var task = alerts.FirstOrDefault(a => a.Id == taskId);
        if (task != null)
        {
            alerts.Remove(task);
            StateHasChanged();
        }
    }

    private class AlertMock
    {
        public int Id { get; set; }
        public string Type { get; set; } = string.Empty;
        public string Title { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string Time { get; set; } = string.Empty;
        public bool IsUrgent { get; set; }
        public string ColorClass { get; set; } = string.Empty;
    }
}