@page "/"
@rendermode InteractiveServer
@using AlmaMedical.Web.Client.Components.HomeComponents
@using AlmaMedical.Web.Client.Services
@using AlmaMedical.Web.Client.Base
@using static AlmaMedical.Web.Client.Services.RolePermissionService
@inherits AuthorizedComponentBase

<PageTitle>Home - AlmaMedical</PageTitle>

<div class="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 p-4 md:p-6 lg:p-8">
    <!-- Header -->
    <div class="mb-6">
        <p class="text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            Bienvenido, @GetCurrentUserName()
        </p>
        <p class="text-sm text-slate-500 mt-2">Rol actual: <strong>@CurrentUser.UserRole</strong></p>
    </div>

    <!-- Main Grid Layout -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Left Column - Main Content (2/3) -->
        <div class="lg:col-span-2 space-y-6">
            <!-- Next Appointment Card (Destacado) -->
            <NextAppointmentCard />

            <!-- Today's Appointments List -->
            <TodayAppointmentsList />

            <!-- Quick Stats (Solo para Professional/Admin) -->
            @if (HasPermission(Permission.ViewFinancialMetrics))
            {
                <QuickStats />
            }

            <!-- Weekly Chart (Solo para Professional/Admin) -->
            @if (HasPermission(Permission.ViewFinancialMetrics))
            {
                <WeeklyChart />
            }

            <!-- Recent Sales (Solo para Professional/Admin) -->
            @if (HasPermission(Permission.ViewSales))
            {
                <RecentSales />
            }
        </div>

        <!-- Right Column - Sidebar (1/3) -->
        <div class="space-y-6">
            <!-- Internal Messaging -->
            <InternalMessaging />

            <!-- Quick Actions -->
            <QuickActions />

            <!-- Tasks & Alerts -->
            <TasksAlerts />
        </div>
    </div>
</div>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();
        CurrentUser.OnRoleChanged += OnRoleChangedHandler;
    }

    private void OnRoleChangedHandler()
    {
        InvokeAsync(StateHasChanged);
    }

    private string GetCurrentUserName()
    {
        return CurrentUser?.FullName ?? "Usuario";
    }

    public void Dispose()
    {
        CurrentUser.OnRoleChanged -= OnRoleChangedHandler;
    }
}