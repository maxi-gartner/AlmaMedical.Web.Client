@page "/gastos"
@rendermode InteractiveServer
@inherits AlmaMedical.Web.Client.Base.AuthorizedComponentBase
@using AlmaMedical.Web.Client.Services
@using static AlmaMedical.Web.Client.Services.RolePermissionService

<PageTitle>Gastos - ALMA Medical</PageTitle>

<div class="min-h-screen bg-gray-50/50">
    <!-- Header -->
    <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-6 mb-6 border border-gray-100">
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <div>
                <h1 class="text-3xl font-bold bg-gradient-to-r from-red-600 to-orange-600 bg-clip-text text-transparent">
                    Control de Gastos
                </h1>
                <p class="text-gray-600 mt-1">Registra y controla los egresos del negocio</p>
            </div>
            @if (HasPermission(Permission.CreateExpense))
            {
                <button @onclick="MostrarFormularioNuevo"
                        class="bg-gradient-to-r from-red-600 to-orange-600 hover:from-red-700 hover:to-orange-700 text-white px-6 py-3 rounded-xl flex items-center gap-2 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                    </svg>
                    Registrar Gasto
                </button>
            }
        </div>
    </div>

    <!-- Estadísticas -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
        <div class="bg-gradient-to-br from-red-500 to-orange-600 rounded-2xl p-6 text-white shadow-xl">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-red-100 text-sm">Total Gastos del Mes</p>
                    <p class="text-3xl font-bold mt-2">$@gastos.Sum(g => g.Monto).ToString("N0")</p>
                </div>
                <svg class="w-12 h-12 text-red-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 14l6-6m-5.5.5h.01m4.99 5h.01M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16l3.5-2 3.5 2 3.5-2 3.5 2z" />
                </svg>
            </div>
        </div>

        <div class="bg-gradient-to-br from-yellow-500 to-amber-600 rounded-2xl p-6 text-white shadow-xl">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-yellow-100 text-sm">Gastos Fijos</p>
                    <p class="text-3xl font-bold mt-2">$@gastos.Where(g => g.EsRecurrente).Sum(g => g.Monto).ToString("N0")</p>
                </div>
                <svg class="w-12 h-12 text-yellow-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
            </div>
        </div>

        <div class="bg-gradient-to-br from-indigo-500 to-blue-600 rounded-2xl p-6 text-white shadow-xl">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-indigo-100 text-sm">Gastos Registrados</p>
                    <p class="text-3xl font-bold mt-2">@gastos.Count</p>
                </div>
                <svg class="w-12 h-12 text-indigo-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
            </div>
        </div>

        <div class="bg-gradient-to-br from-purple-500 to-pink-600 rounded-2xl p-6 text-white shadow-xl">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-purple-100 text-sm">Promedio Diario</p>
                    <p class="text-3xl font-bold mt-2">$@(gastos.Any() ? (gastos.Sum(g => g.Monto) / 30).ToString("N0") : "0")</p>
                </div>
                <svg class="w-12 h-12 text-purple-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                </svg>
            </div>
        </div>
    </div>

    <!-- Filtros -->
    <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-6 mb-6 border border-gray-100">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Categoría</label>
                <select @bind="categoriaFiltro"
                        class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white">
                    <option value="">Todas las categorías</option>
                    <option value="Alquiler">Alquiler</option>
                    <option value="Servicios">Servicios</option>
                    <option value="Sueldos">Sueldos</option>
                    <option value="Insumos">Insumos</option>
                    <option value="Marketing">Marketing</option>
                    <option value="Mantenimiento">Mantenimiento</option>
                    <option value="Impuestos">Impuestos</option>
                    <option value="Otros">Otros</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Mes</label>
                <select @bind="mesFiltro"
                        class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white">
                    <option value="0">Todos los meses</option>
                    <option value="1">Enero</option>
                    <option value="2">Febrero</option>
                    <option value="3">Marzo</option>
                    <option value="4">Abril</option>
                    <option value="5">Mayo</option>
                    <option value="6">Junio</option>
                    <option value="7">Julio</option>
                    <option value="8">Agosto</option>
                    <option value="9">Septiembre</option>
                    <option value="10">Octubre</option>
                    <option value="11">Noviembre</option>
                    <option value="12">Diciembre</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Año</label>
                <select @bind="anioFiltro"
                        class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white">
                    <option value="2025">2025</option>
                    <option value="2024">2024</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Grid de gastos y gráfico -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- Tabla de gastos -->
        <div class="lg:col-span-2">
            <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl overflow-hidden border border-gray-100">
                <div class="px-6 py-4 bg-gradient-to-r from-red-600 to-orange-600 border-b border-gray-200">
                    <h3 class="text-lg font-semibold text-white">Gastos Registrados (@GastosFiltrados.Count)</h3>
                </div>

                <div class="overflow-x-auto max-h-96">
                    <table class="w-full">
                        <thead class="bg-gray-50 border-b-2 border-gray-200 sticky top-0">
                            <tr>
                                <th class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase">Fecha</th>
                                <th class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase">Categoría</th>
                                <th class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase">Descripción</th>
                                <th class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase">Monto</th>
                                <th class="px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase">Acciones</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200">
                            @foreach (var gasto in GastosFiltrados.OrderByDescending(g => g.Fecha))
                            {
                                <tr class="hover:bg-red-50/50 transition-all duration-300">
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <p class="text-sm font-medium text-gray-900">@gasto.Fecha.ToString("dd/MM")</p>
                                        <p class="text-xs text-gray-500">@gasto.Fecha.ToString("yyyy")</p>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <span class="px-2 py-1 text-xs rounded-full font-semibold @ObtenerColorCategoria(gasto.Categoria)">
                                            @gasto.Categoria
                                        </span>
                                    </td>
                                    <td class="px-4 py-3">
                                        <p class="text-sm text-gray-900 line-clamp-1">@gasto.Descripcion</p>
                                        @if (!string.IsNullOrWhiteSpace(gasto.NumeroFactura))
                                        {
                                            <p class="text-xs text-gray-500">Fact: @gasto.NumeroFactura</p>
                                        }
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <p class="text-lg font-bold text-red-600">-$@gasto.Monto.ToString("N0")</p>
                                        @if (gasto.EsRecurrente)
                                        {
                                            <span class="text-xs text-gray-500">Mensual</span>
                                        }
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <div class="flex gap-1">
                                            @if (HasPermission(Permission.EditExpense))
                                            {
                                                <button class="p-1 text-yellow-600 hover:bg-yellow-50 rounded-lg transition-all">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                                    </svg>
                                                </button>
                                            }
                                            @if (HasPermission(Permission.DeleteExpense))
                                            {
                                                <button class="p-1 text-red-600 hover:bg-red-50 rounded-lg transition-all">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                    </svg>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot class="bg-gray-50 border-t-2 border-gray-200">
                            <tr>
                                <td colspan="3" class="px-4 py-3 text-right font-semibold">TOTAL:</td>
                                <td class="px-4 py-3">
                                    <p class="text-xl font-bold text-red-600">-$@GastosFiltrados.Sum(g => g.Monto).ToString("N0")</p>
                                </td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <!-- Gráfico de gastos por categoría -->
        <div class="lg:col-span-1">
            <div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-xl p-6 border border-gray-100">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Gastos por Categoría</h3>

                <div class="space-y-4">
                    @foreach (var grupo in gastos.GroupBy(g => g.Categoria).OrderByDescending(g => g.Sum(x => x.Monto)))
                    {
                        var total = grupo.Sum(x => x.Monto);
                        var porcentaje = gastos.Sum(g => g.Monto) > 0 ? (total / gastos.Sum(g => g.Monto) * 100) : 0;

                        <div>
                            <div class="flex justify-between items-center mb-2">
                                <span class="text-sm font-medium text-gray-700">@grupo.Key</span>
                                <span class="text-sm font-bold text-gray-900">$@total.ToString("N0")</span>
                            </div>
                            <div class="w-full bg-gray-200 rounded-full h-2">
                                <div class="h-2 rounded-full transition-all duration-500 @ObtenerColorBarra(grupo.Key)"
                                     style="width: @porcentaje%"></div>
                            </div>
                            <span class="text-xs text-gray-500">@porcentaje.ToString("F1")%</span>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Formulario -->
    @if (mostrarFormulario)
    {
        <div class="fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4">
            <div class="bg-white/95 backdrop-blur-sm rounded-2xl p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto shadow-2xl border border-gray-100 transform transition-all">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold text-gray-900">Registrar Gasto</h2>
                    <button @onclick="CancelarFormulario"
                            class="text-gray-500 hover:text-gray-700 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </button>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Categoría</label>
                        <select @bind="nuevoGasto.Categoria"
                                class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white">
                            <option value="">Seleccionar...</option>
                            <option value="Alquiler">Alquiler</option>
                            <option value="Servicios">Servicios (Luz, Agua, Internet)</option>
                            <option value="Sueldos">Sueldos</option>
                            <option value="Insumos">Insumos y Productos</option>
                            <option value="Marketing">Marketing y Publicidad</option>
                            <option value="Mantenimiento">Mantenimiento</option>
                            <option value="Impuestos">Impuestos y Tasas</option>
                            <option value="Otros">Otros</option>
                        </select>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Monto</label>
                        <input type="number" step="0.01" @bind="nuevoGasto.Monto"
                               class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white"
                               placeholder="0.00" />
                    </div>

                    <div class="md:col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Descripción</label>
                        <input type="text" @bind="nuevoGasto.Descripcion"
                               class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white"
                               placeholder="Ej: Alquiler de local Enero 2025" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Fecha del Gasto</label>
                        <input type="date" @bind="nuevoGasto.Fecha"
                               class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Método de Pago</label>
                        <select @bind="nuevoGasto.MetodoPago"
                                class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white">
                            <option value="Efectivo">Efectivo</option>
                            <option value="Tarjeta">Tarjeta</option>
                            <option value="Transferencia">Transferencia</option>
                            <option value="Débito Automático">Débito Automático</option>
                        </select>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Número de Factura/Recibo (opcional)</label>
                        <input type="text" @bind="nuevoGasto.NumeroFactura"
                               class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white"
                               placeholder="Ej: 0001-00012345" />
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">¿Es un gasto recurrente?</label>
                        <select @bind="nuevoGasto.EsRecurrente"
                                class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white">
                            <option value="false">No</option>
                            <option value="true">Sí (Mensual)</option>
                        </select>
                    </div>

                    <div class="md:col-span-2">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Notas adicionales</label>
                        <textarea @bind="nuevoGasto.Notas" rows="3"
                                  class="w-full px-4 py-3 border-2 border-gray-300 rounded-xl focus:ring-4 focus:ring-red-500/20 focus:border-red-500 transition-all duration-300 bg-gray-50/50 focus:bg-white"
                                  placeholder="Observaciones o detalles adicionales"></textarea>
                    </div>
                </div>

                <div class="flex justify-end gap-3 mt-6 pt-6 border-t border-gray-200">
                    <button @onclick="CancelarFormulario"
                            class="px-6 py-3 border-2 border-gray-300 rounded-xl hover:bg-gray-50 hover:border-gray-400 transition-all duration-300 text-gray-700 font-medium">
                        Cancelar
                    </button>
                    <button @onclick="GuardarGasto"
                            class="px-6 py-3 bg-gradient-to-r from-red-600 to-orange-600 text-white rounded-xl hover:from-red-700 hover:to-orange-700 transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl font-medium">
                        Guardar Gasto
                    </button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private List<GastoDto> gastos = new();
    private GastoDto nuevoGasto = new();
    private bool mostrarFormulario = false;
    private string categoriaFiltro = "";
    private int mesFiltro = DateTime.Now.Month;
    private int anioFiltro = DateTime.Now.Year;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var hoy = DateTime.Today;
        gastos = new List<GastoDto>
        {
            new GastoDto { Categoria = "Alquiler", Descripcion = "Alquiler local comercial", Monto = 150000, Fecha = new DateTime(hoy.Year, hoy.Month, 1), MetodoPago = "Transferencia", EsRecurrente = true, NumeroFactura = "A-0001-00012345" },
            new GastoDto { Categoria = "Servicios", Descripcion = "Factura de luz y gas", Monto = 25000, Fecha = hoy.AddDays(-5), MetodoPago = "Débito Automático", EsRecurrente = true, NumeroFactura = "" },
            new GastoDto { Categoria = "Insumos", Descripcion = "Compra de productos cosméticos", Monto = 85000, Fecha = hoy.AddDays(-10), MetodoPago = "Tarjeta", EsRecurrente = false, NumeroFactura = "B-0005-00054321" },
            new GastoDto { Categoria = "Marketing", Descripcion = "Publicidad en redes sociales", Monto = 30000, Fecha = hoy.AddDays(-3), MetodoPago = "Tarjeta", EsRecurrente = true, NumeroFactura = "" },
            new GastoDto { Categoria = "Mantenimiento", Descripcion = "Reparación equipo láser", Monto = 45000, Fecha = hoy.AddDays(-7), MetodoPago = "Efectivo", EsRecurrente = false, NumeroFactura = "" }
        };
    }

    private List<GastoDto> GastosFiltrados
    {
        get
        {
            var resultado = gastos.AsEnumerable();

            if (!string.IsNullOrWhiteSpace(categoriaFiltro))
                resultado = resultado.Where(g => g.Categoria == categoriaFiltro);

            if (mesFiltro > 0)
                resultado = resultado.Where(g => g.Fecha.Month == mesFiltro);

            if (anioFiltro > 0)
                resultado = resultado.Where(g => g.Fecha.Year == anioFiltro);

            return resultado.ToList();
        }
    }

    private void MostrarFormularioNuevo()
    {
        nuevoGasto = new GastoDto { Fecha = DateTime.Today };
        mostrarFormulario = true;
    }

    private void GuardarGasto()
    {
        if (!string.IsNullOrWhiteSpace(nuevoGasto.Categoria) && nuevoGasto.Monto > 0)
        {
            gastos.Add(nuevoGasto);
            mostrarFormulario = false;
            nuevoGasto = new GastoDto();
        }
    }

    private void CancelarFormulario()
    {
        mostrarFormulario = false;
        nuevoGasto = new GastoDto();
    }

    private string ObtenerColorCategoria(string categoria) => categoria switch
    {
        "Alquiler" => "bg-blue-100 text-blue-800",
        "Servicios" => "bg-cyan-100 text-cyan-800",
        "Sueldos" => "bg-green-100 text-green-800",
        "Insumos" => "bg-yellow-100 text-yellow-800",
        "Marketing" => "bg-red-100 text-red-800",
        "Mantenimiento" => "bg-gray-100 text-gray-800",
        "Impuestos" => "bg-purple-100 text-purple-800",
        _ => "bg-gray-100 text-gray-800"
    };

    private string ObtenerColorBarra(string categoria) => categoria switch
    {
        "Alquiler" => "bg-gradient-to-r from-blue-400 to-blue-600",
        "Servicios" => "bg-gradient-to-r from-cyan-400 to-cyan-600",
        "Sueldos" => "bg-gradient-to-r from-green-400 to-green-600",
        "Insumos" => "bg-gradient-to-r from-yellow-400 to-yellow-600",
        "Marketing" => "bg-gradient-to-r from-red-400 to-red-600",
        "Mantenimiento" => "bg-gradient-to-r from-gray-400 to-gray-600",
        "Impuestos" => "bg-gradient-to-r from-purple-400 to-purple-600",
        _ => "bg-gradient-to-r from-gray-400 to-gray-600"
    };

    public class GastoDto
    {
        public string Categoria { get; set; } = "";
        public string Descripcion { get; set; } = "";
        public decimal Monto { get; set; }
        public DateTime Fecha { get; set; }
        public string MetodoPago { get; set; } = "Efectivo";
        public bool EsRecurrente { get; set; }
        public string? NumeroFactura { get; set; }
        public string? Notas { get; set; }
    }
}