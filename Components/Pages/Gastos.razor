@page "/gastos"
@rendermode InteractiveServer

<PageTitle>Gastos - ALMA Medical</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col">
            <h1 class="display-4">Control de Gastos</h1>
            <p class="text-muted">Registra y controla los egresos del negocio</p>
        </div>
        <div class="col-auto">
            <button class="btn btn-danger btn-lg" @onclick="MostrarFormularioNuevo">
                <i class="bi bi-plus-circle"></i> Registrar Gasto
            </button>
        </div>
    </div>

    @if (mostrarFormulario)
    {
        <div class="card mb-4">
            <div class="card-header bg-danger text-white">
                <h5 class="mb-0">Nuevo Gasto</h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label">Categoría</label>
                        <select class="form-select" @bind="nuevoGasto.Categoria">
                            <option value="">Seleccionar...</option>
                            <option value="Alquiler">Alquiler</option>
                            <option value="Servicios">Servicios (Luz, Agua, Internet)</option>
                            <option value="Sueldos">Sueldos</option>
                            <option value="Insumos">Insumos y Productos</option>
                            <option value="Marketing">Marketing y Publicidad</option>
                            <option value="Mantenimiento">Mantenimiento</option>
                            <option value="Impuestos">Impuestos y Tasas</option>
                            <option value="Otros">Otros</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Descripción</label>
                        <input type="text" class="form-control" @bind="nuevoGasto.Descripcion"
                               placeholder="Ej: Alquiler de local Enero 2025" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Monto</label>
                        <input type="number" step="0.01" class="form-control" @bind="nuevoGasto.Monto"
                               placeholder="0.00" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Fecha del Gasto</label>
                        <input type="date" class="form-control" @bind="nuevoGasto.Fecha" />
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Método de Pago</label>
                        <select class="form-select" @bind="nuevoGasto.MetodoPago">
                            <option value="Efectivo">Efectivo</option>
                            <option value="Tarjeta">Tarjeta</option>
                            <option value="Transferencia">Transferencia</option>
                            <option value="Débito Automático">Débito Automático</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Número de Factura/Recibo (opcional)</label>
                        <input type="text" class="form-control" @bind="nuevoGasto.NumeroFactura"
                               placeholder="Ej: 0001-00012345" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">¿Es un gasto recurrente?</label>
                        <select class="form-select" @bind="nuevoGasto.EsRecurrente">
                            <option value="false">No</option>
                            <option value="true">Sí (Mensual)</option>
                        </select>
                    </div>
                    <div class="col-12">
                        <label class="form-label">Notas adicionales</label>
                        <textarea class="form-control" rows="2" @bind="nuevoGasto.Notas"
                                  placeholder="Observaciones o detalles adicionales"></textarea>
                    </div>
                </div>
                <div class="mt-3">
                    <button class="btn btn-success me-2" @onclick="GuardarGasto">
                        <i class="bi bi-check-circle"></i> Guardar
                    </button>
                    <button class="btn btn-secondary" @onclick="CancelarFormulario">
                        <i class="bi bi-x-circle"></i> Cancelar
                    </button>
                </div>
            </div>
        </div>
    }

    <div class="row mb-3">
        <div class="col-md-3">
            <select class="form-select" @bind="categoriaFiltro">
                <option value="">Todas las categorías</option>
                <option value="Alquiler">Alquiler</option>
                <option value="Servicios">Servicios</option>
                <option value="Sueldos">Sueldos</option>
                <option value="Insumos">Insumos</option>
                <option value="Marketing">Marketing</option>
                <option value="Mantenimiento">Mantenimiento</option>
                <option value="Impuestos">Impuestos</option>
                <option value="Otros">Otros</option>
            </select>
        </div>
        <div class="col-md-3">
            <select class="form-select" @bind="mesFiltro">
                <option value="0">Todos los meses</option>
                <option value="1">Enero</option>
                <option value="2">Febrero</option>
                <option value="3">Marzo</option>
                <option value="4">Abril</option>
                <option value="5">Mayo</option>
                <option value="6">Junio</option>
                <option value="7">Julio</option>
                <option value="8">Agosto</option>
                <option value="9">Septiembre</option>
                <option value="10">Octubre</option>
                <option value="11">Noviembre</option>
                <option value="12">Diciembre</option>
            </select>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">Gastos Registrados (@GastosFiltrados.Count)</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Fecha</th>
                            <th>Categoría</th>
                            <th>Descripción</th>
                            <th>Monto</th>
                            <th>Método Pago</th>
                            <th>Recurrente</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var gasto in GastosFiltrados.OrderByDescending(g => g.Fecha))
                        {
                            <tr>
                                <td>
                                    <strong>@gasto.Fecha.ToString("dd/MM/yyyy")</strong>
                                </td>
                                <td>
                                    <span class="badge @ObtenerColorCategoria(gasto.Categoria)">
                                        @gasto.Categoria
                                    </span>
                                </td>
                                <td>
                                    @gasto.Descripcion
                                    @if (!string.IsNullOrWhiteSpace(gasto.NumeroFactura))
                                    {
                                        <small class="text-muted d-block">Factura: @gasto.NumeroFactura</small>
                                    }
                                </td>
                                <td>
                                    <strong class="text-danger">-$@gasto.Monto.ToString("N2")</strong>
                                </td>
                                <td>@gasto.MetodoPago</td>
                                <td>
                                    @if (gasto.EsRecurrente)
                                    {
                                        <i class="bi bi-arrow-repeat text-primary" title="Gasto mensual"></i>
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-outline-warning me-1" title="Editar">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" title="Eliminar">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot class="table-light">
                        <tr>
                            <th colspan="3" class="text-end">TOTAL GASTOS:</th>
                            <th class="text-danger">-$@GastosFiltrados.Sum(g => g.Monto).ToString("N2")</th>
                            <th colspan="3"></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Gastos por Categoría</h5>
                </div>
                <div class="card-body">
                    @foreach (var grupo in gastos.GroupBy(g => g.Categoria).OrderByDescending(g => g.Sum(x => x.Monto)))
                    {
                        var total = grupo.Sum(x => x.Monto);
                        var porcentaje = gastos.Sum(g => g.Monto) > 0 ? (total / gastos.Sum(g => g.Monto) * 100) : 0;

                        <div class="mb-3">
                            <div class="d-flex justify-content-between mb-1">
                                <span>@grupo.Key</span>
                                <strong>$@total.ToString("N2")</strong>
                            </div>
                            <div class="progress">
                                <div class="progress-bar @ObtenerColorCategoria(grupo.Key)"
                                     style="width: @porcentaje%">
                                    @porcentaje.ToString("F1")%
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="row">
                <div class="col-12 mb-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-danger">$@gastos.Sum(g => g.Monto).ToString("N2")</h3>
                            <p class="mb-0">Total Gastos del Mes</p>
                        </div>
                    </div>
                </div>
                <div class="col-12 mb-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-warning">$@gastos.Where(g => g.EsRecurrente).Sum(g => g.Monto).ToString("N2")</h3>
                            <p class="mb-0">Gastos Fijos Mensuales</p>
                        </div>
                    </div>
                </div>
                <div class="col-12">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-info">@gastos.Count</h3>
                            <p class="mb-0">Gastos Registrados</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<GastoDto> gastos = new();
    private GastoDto nuevoGasto = new();
    private bool mostrarFormulario = false;
    private string categoriaFiltro = "";
    private int mesFiltro = DateTime.Now.Month;

    protected override void OnInitialized()
    {
        var hoy = DateTime.Today;
        gastos = new List<GastoDto>
        {
            new GastoDto { Categoria = "Alquiler", Descripcion = "Alquiler local comercial", Monto = 150000, Fecha = new DateTime(hoy.Year, hoy.Month, 1), MetodoPago = "Transferencia", EsRecurrente = true, NumeroFactura = "A-0001-00012345" },
            new GastoDto { Categoria = "Servicios", Descripcion = "Factura de luz y gas", Monto = 25000, Fecha = hoy.AddDays(-5), MetodoPago = "Débito Automático", EsRecurrente = true, NumeroFactura = "" },
            new GastoDto { Categoria = "Insumos", Descripcion = "Compra de productos cosméticos", Monto = 85000, Fecha = hoy.AddDays(-10), MetodoPago = "Tarjeta", EsRecurrente = false, NumeroFactura = "B-0005-00054321" },
            new GastoDto { Categoria = "Marketing", Descripcion = "Publicidad en redes sociales", Monto = 30000, Fecha = hoy.AddDays(-3), MetodoPago = "Tarjeta", EsRecurrente = true, NumeroFactura = "" },
            new GastoDto { Categoria = "Mantenimiento", Descripcion = "Reparación equipo láser", Monto = 45000, Fecha = hoy.AddDays(-7), MetodoPago = "Efectivo", EsRecurrente = false, NumeroFactura = "" }
        };
    }

    private List<GastoDto> GastosFiltrados
    {
        get
        {
            var resultado = gastos.AsEnumerable();

            if (!string.IsNullOrWhiteSpace(categoriaFiltro))
                resultado = resultado.Where(g => g.Categoria == categoriaFiltro);

            if (mesFiltro > 0)
                resultado = resultado.Where(g => g.Fecha.Month == mesFiltro);

            return resultado.ToList();
        }
    }

    private void MostrarFormularioNuevo()
    {
        nuevoGasto = new GastoDto { Fecha = DateTime.Today };
        mostrarFormulario = true;
    }

    private void GuardarGasto()
    {
        if (!string.IsNullOrWhiteSpace(nuevoGasto.Categoria) && nuevoGasto.Monto > 0)
        {
            gastos.Add(nuevoGasto);
            mostrarFormulario = false;
            nuevoGasto = new GastoDto();
        }
    }

    private void CancelarFormulario()
    {
        mostrarFormulario = false;
        nuevoGasto = new GastoDto();
    }

    private string ObtenerColorCategoria(string categoria) => categoria switch
    {
        "Alquiler" => "bg-primary",
        "Servicios" => "bg-info",
        "Sueldos" => "bg-success",
        "Insumos" => "bg-warning",
        "Marketing" => "bg-danger",
        "Mantenimiento" => "bg-secondary",
        "Impuestos" => "bg-dark",
        _ => "bg-secondary"
    };

    public class GastoDto
    {
        public string Categoria { get; set; } = "";
        public string Descripcion { get; set; } = "";
        public decimal Monto { get; set; }
        public DateTime Fecha { get; set; }
        public string MetodoPago { get; set; } = "Efectivo";
        public bool EsRecurrente { get; set; }
        public string? NumeroFactura { get; set; }
        public string? Notas { get; set; }
    }
}