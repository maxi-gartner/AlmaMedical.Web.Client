@rendermode InteractiveServer
@inject Services.CurrentUserService CurrentUser
@inject Services.RolePermissionService PermissionService
@inject NavigationManager Navigation
@implements IDisposable
@using AlmaMedical.Web.Client.Services
@using static AlmaMedical.Web.Client.Services.RolePermissionService

<!-- Sidebar con glassmorphism -->
<div class="fixed left-0 top-0 h-full w-64 bg-gradient-to-b from-blue-600 to-indigo-700 shadow-2xl">
    <!-- Header del sidebar -->
    <div class="p-6 border-b border-white/20">
        <a href="" class="flex items-center gap-3 text-white hover:opacity-90 transition-opacity">
            <span class="text-3xl">🏥</span>
            <div>
                <h1 class="text-xl font-bold">ALMA Medical</h1>
                <p class="text-xs text-blue-200">Sistema de Gestión</p>
            </div>
        </a>
    </div>

    <!-- User info -->
    <div class="p-4 bg-white/10 backdrop-blur-sm border-b border-white/20">
        <div class="flex items-center gap-3">
            <div class="w-10 h-10 rounded-full bg-white/20 flex items-center justify-center text-white font-bold">
                @CurrentUser.FirstName.Substring(0, 1)@CurrentUser.LastName.Substring(0, 1)
            </div>
            <div class="flex-1 min-w-0">
                <p class="text-sm font-medium text-white truncate">@CurrentUser.FullName</p>
                <span class="inline-block px-2 py-0.5 text-xs rounded-full bg-blue-400/30 text-blue-100 backdrop-blur-sm">
                    @GetRoleDisplayName()
                </span>
            </div>
        </div>
    </div>

    <!-- Navigation -->
    <nav class="p-4 space-y-1 overflow-y-auto h-[calc(100%-280px)]">
        @if (HasPermission(Permission.ViewDashboard))
        {
            <NavLink href="" Match="NavLinkMatch.All"
                     class="flex items-center gap-3 px-4 py-3 rounded-xl text-white/80 hover:bg-white/10 hover:text-white transition-all duration-300 group">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                <span class="font-medium">Dashboard</span>
            </NavLink>
        }

        @if (HasPermission(Permission.ViewClients))
        {
            <NavLink href="clientes"
                     class="flex items-center gap-3 px-4 py-3 rounded-xl text-white/80 hover:bg-white/10 hover:text-white transition-all duration-300 group">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
                </svg>
                <span class="font-medium">Clientes</span>
            </NavLink>
        }

        @if (HasPermission(Permission.ViewProducts))
        {
            <NavLink href="productos"
                     class="flex items-center gap-3 px-4 py-3 rounded-xl text-white/80 hover:bg-white/10 hover:text-white transition-all duration-300 group">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                </svg>
                <span class="font-medium">Productos</span>
            </NavLink>
        }

        @if (HasPermission(Permission.ViewAppointments))
        {
            <NavLink href="turnos"
                     class="flex items-center gap-3 px-4 py-3 rounded-xl text-white/80 hover:bg-white/10 hover:text-white transition-all duration-300 group">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                <span class="font-medium">Turnos</span>
            </NavLink>
        }

        @if (HasPermission(Permission.ViewSales))
        {
            <NavLink href="ventas"
                     class="flex items-center gap-3 px-4 py-3 rounded-xl text-white/80 hover:bg-white/10 hover:text-white transition-all duration-300 group">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
                <span class="font-medium">Ventas</span>
            </NavLink>
        }

        @if (HasPermission(Permission.ViewExpenses))
        {
            <NavLink href="gastos"
                     class="flex items-center gap-3 px-4 py-3 rounded-xl text-white/80 hover:bg-white/10 hover:text-white transition-all duration-300 group">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 14l6-6m-5.5.5h.01m4.99 5h.01M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16l3.5-2 3.5 2 3.5-2 3.5 2z" />
                </svg>
                <span class="font-medium">Gastos</span>
            </NavLink>
        }
    </nav>

    <!-- Footer con selector de rol y configuración -->
    <div class="absolute bottom-0 left-0 right-0 p-4 bg-indigo-800/50 backdrop-blur-sm border-t border-white/20">
        @if (CurrentUser.UserRole == "TenantAdmin" || CurrentUser.UserRole == "SuperAdmin")
        {
            <NavLink href="configuracion/turnos"
                     class="flex items-center gap-3 px-4 py-2 rounded-xl text-white/80 hover:bg-white/10 hover:text-white transition-all duration-300 mb-3">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                <span class="text-sm font-medium">Configuración de Turnos</span>
            </NavLink>
        }

        <!-- Selector de rol (testing) -->
        <div class="text-xs text-white/60 mb-2">Cambiar rol (testing):</div>
        <select @onchange="CambiarRol"
                class="w-full px-3 py-2 rounded-lg bg-white/10 border border-white/20 text-white text-sm focus:ring-2 focus:ring-blue-400 focus:border-transparent transition-all backdrop-blur-sm">
            <option value="TenantAdmin" selected="@(CurrentUser.UserRole == "TenantAdmin")">Dueño (Admin)</option>
            <option value="Professional" selected="@(CurrentUser.UserRole == "Professional")">Profesional</option>
            <option value="Receptionist" selected="@(CurrentUser.UserRole == "Receptionist")">Recepcionista</option>
        </select>
    </div>
</div>

<!-- Agregar estilos para NavLink activo -->
<style>
    .sidebar a.active {
        background: rgba(255, 255, 255, 0.15);
        color: white;
        font-weight: 600;
    }
</style>

@code {
    private bool HasPermission(Permission permission)
    {
        return PermissionService.HasPermission(CurrentUser.UserRole, permission);
    }
    protected override void OnInitialized()
    {
        CurrentUser.OnRoleChanged += OnRoleChangedHandler;
    }

    private void OnRoleChangedHandler()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        CurrentUser.OnRoleChanged -= OnRoleChangedHandler;
    }

    private string GetRoleDisplayName() => CurrentUser.UserRole switch
    {
        "SuperAdmin" => "Super Admin",
        "TenantAdmin" => "Administrador",
        "Professional" => "Profesional",
        "Receptionist" => "Recepcionista",
        "Customer" => "Cliente",
        _ => CurrentUser.UserRole
    };

    private void CambiarRol(ChangeEventArgs e)
    {
        if (e.Value != null)
        {
            var nuevoRol = e.Value.ToString()!;
            CurrentUser.SetRole(nuevoRol);
            StateHasChanged();
        }
    }
}